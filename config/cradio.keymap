/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include "keymap_italian.h"
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// Layer definitions

#define BASE 0
#define SYM 1
#define EXT 2
#define FNC 3
#define SYM2 4
#define ACCENT 5
#define SETTINGS 6

// -----------------

/ {
    macros {
        // sometimes my device thinks a modifier is being held down
        // pressing all modifiers fixes it.
    };

    combos {
        compatible = "zmk,combos";

        // both right thumb keys
        // internal-left & external-right thumb keys
        // both left thumb keys

        del {
            bindings = <&kp DEL>;
            key-positions = <8 9>;
        };

        single_quote {
            bindings = <&kp SQT>;
            key-positions = <18 19>;
        };

        double_quote {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <28 29>;
        };

        esc {
            bindings = <&kp ESC>;
            key-positions = <0 1>;
        };

        word_delete {
            bindings = <&kp LA(DEL)>;
            key-positions = <8 9>;
            layers = <1>;
        };

        word_forward_del {
            bindings = <&kp LS(LA(DEL))>;
            key-positions = <18 19>;
            layers = <1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // Base alpha layer

        default_layer {
            bindings = <
&kp Q        &kp W           &kp E             &kp R       &kp T    &kp Y      &kp U            &kp I              &kp O            &kp P
&mt LCTRL A  &mt LEFT_ALT S  &mt LEFT_SHIFT D  &mt LGUI H  &kp G    &kp H      &mt RIGHT_GUI J  &mt RIGHT_SHIFT K  &mt RIGHT_ALT L  &mt RCTRL SEMICOLON
&kp Z        &kp X           &kp C             &kp V       &kp B    &kp N      &kp M            &kp COMMA          &kp DOT          &kp SLASH
                                               &kp SPACE   &mo 2    &kp ENTER  &mo 1
            >;
        };

        // Numbers and high frequency symbols

        sym_layer {
            bindings = <
&kp PERCENT   &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp AT_SIGN    &kp EXCLAMATION  &kp AMPERSAND  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp ASTERISK
&kp CARET     &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp HASH       &kp MINUS        &kp EQUAL      &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp PIPE
&kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp DOLLAR     &kp UNDERSCORE   &kp PLUS       &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp NON_US_BACKSLASH
                                          &trans        &trans         &trans           &trans
            >;
        };

        // Main modifiers and arrow keys

        ext_layer {
            bindings = <
&kp ESC        &kp LG(GRAVE)  &kp LG(LS(TAB))  &kp LG(TAB)  &trans    &trans          &trans          &trans        &trans     &trans
&kp TAB        &kp LC(TAB)    &trans           &trans       &trans    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT  &trans
&kp LG(LC(Q))  &trans         &trans           &trans       &trans    &trans          &trans          &trans        &trans     &trans
                                               &trans       &trans    &trans          &mo FNC
            >;
        };

        // Function keys with modifiers

        fnc_layer {
            bindings = <
&kp F1  &kp F2   &kp F3   &kp F4   &trans    &trans  &kp C_PAUSE           &kp C_PREV            &kp C_NEXT  &trans
&kp F5  &kp F6   &kp F7   &kp F9   &trans    &trans  &kp C_VOLUME_DOWN     &kp C_VOLUME_UP       &kp K_MUTE  &trans
&kp F9  &kp F10  &kp F11  &kp F12  &none     &none   &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp CAPS    &none
                          &none    &none     &none   &none
            >;
        };

        // Low frequency symbols.

        symbols_2_layer {
            bindings = <
&kp IT_CARET  &kp IT_UNDER  &kp IT_PND   &kp IT_EUR   &kp IT_HASH    &none  &none  &none  &none  &none
&kp IT_BKTK   &kp IT_TILDE  &kp IT_BSLH  &kp IT_PIPE  &kp IT_AND     &none  &none  &none  &none  &none
&none         &none         &kp IT_SECT  &kp IT_CCED  &kp IT_DEG     &none  &none  &none  &none  &none
                                         &none        &none          &none  &none
            >;
        };

        // Used to type regional accents.

        accent_layer {
            bindings = <
&none        &none        &none        &kp IT_CEGR  &none          &none  &none  &none  &none  &none
&kp IT_AGRV  &kp IT_IGRV  &kp IT_OGRV  &kp IT_EGRV  &kp IT_EACU    &none  &none  &none  &none  &none
&none        &none        &none        &kp IT_UGRV  &none          &none  &none  &none  &none  &none
                                       &none        &none          &none  &none
            >;
        };

        // Used to change the keyboard's settings.

        settings_layer {
            bindings = <
&bootloader  &none  &none  &bt BT_CLR  &bt BT_SEL 0    &bt BT_SEL 3  &none  &unstick  &none  &bootloader
&none        &none  &none  &none       &bt BT_SEL 1    &bt BT_SEL 4  &none  &none     &none  &none
&none        &none  &none  &none       &bt BT_SEL 2    &bt BT_SEL 5  &none  &none     &none  &none
                           &none       &none           &none         &none
            >;
        };
    };
};
